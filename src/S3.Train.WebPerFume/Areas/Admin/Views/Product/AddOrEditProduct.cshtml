@using S3.Train.WebPerFume.Areas.Admin.Models
@model ProductViewModel

@{
    ViewBag.Title = "AddOrEditProduct";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="card card-body">
    @{
        if (Model.Name == null)
        {
            <h2 class="card-title">Create New Product</h2>
        }
        else
        {
            <h2 class="card-title">Update Product</h2>
            Model.Description = Html.Raw(HttpUtility.HtmlDecode(Model.Description)).ToString();
        }
    }

    @using (Html.BeginForm("AddOrEditProduct", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-auto" for="Name">Brand</label>
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Brand_Id, Model.DropDownBrand, "select", new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-auto" for="Name">Vendor</label>
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Vendor_Id, Model.DropDownVendor, "select", new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-auto" for="Name">Category</label>
                    <div class="col-md-10">
                        @Html.ListBoxFor(model => model.SelecteCategories, Model.DropDowncategories, new { @class = "form-control", @multiple = "multiple", @size = "8" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        <script type="text/javascript">CKEDITOR.replace("Description", { htmlEncodeOutput: true });</script>
                    </div>
                </div>
                @{
                    if (Model.Name == null)
                    {
                        <div class="form-group">
                            <div class="col-md-10">
                                @{
                                    for (int i = 0; i < Model.Volumes.Count; i++)
                                    {
                                        <div class="form-check">
                                            @Html.HiddenFor(m => m.Volumes[i].Volume)
                                            @Html.CheckBoxFor(m => m.Volumes[i].Checked, new { @class = "form-check-input" })
                                            @Html.DisplayFor(m => m.Volumes[i].Volume, new { @class = "form-check-label" })
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                    }
                }

                <div class="form-group">
                    Image
                    <div class="col-md-10">
                        <input type="file" id="gallery-photo-add" name="image" class="btn">
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="gallery rounded"></div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Submit" class="btn btn-gradient-primary mr-2" />
                    </div>
                </div>
            </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index", new { @class = "btn btn-gradient-secondary mr-2" })
    </div>
</div>

@section scripts
{
    <script>
        $(function () {
            // Multiple images preview in browser
            var imagesPreview = function (input, placeToInsertImagePreview) {

                if (input.files) {
                    var filesAmount = input.files.length;

                    for (i = 0; i < filesAmount; i++) {
                        var reader = new FileReader();

                        reader.onload = function (event) {
                            $($.parseHTML('<img>')).attr('src', event.target.result).appendTo(placeToInsertImagePreview);
                        }

                        reader.readAsDataURL(input.files[i]);
                    }
                }

            };

            $('#gallery-photo-add').on('change', function () {
                imagesPreview(this, 'div.gallery');
            });
        });
    </script>
}