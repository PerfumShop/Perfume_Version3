@using S3Train.Model.User
@model UserViewModel

@{
    string action;
    string css;
    if (Model.Email != null)
    {
        action = "Update";
        css = "btn btn-gradient-info btn-sm";
    }
    else
    {
        action = "Create";
        css = "btn btn-gradient-success btn-fw";
    }
}


@using (Html.BeginForm(action, "User", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <button type="button" class="@css" data-toggle="modal" data-target="#exampleModal@(Model.Id)">
        @action
    </button>

    <div class="modal fade" id="exampleModal@(Model.Id)" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title@(Model.Id)" id="exampleModalLabel">@action Role</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md" })
                        <div class="col-md">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md" })
                        <div class="col">
                            @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md" })
                        <div class="col">
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md" })
                        <div class="col">
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @{
                        if (action == "Update")
                        {
                            @Html.HiddenFor(m => m.Id);
                        }
                        else
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.PassWord, htmlAttributes: new { @class = "control-label col-md" })
                                <div class="col-md">
                                    @Html.PasswordFor(model => model.PassWord, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.PassWord, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }
                    }
                    <div class="form-group">
                        @Html.LabelFor(model => model.Avatar, htmlAttributes: new { @class = "control-label col-md" })
                        <div class="col-md">
                            @Html.EditorFor(model => model.Avatar, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md" })
                        <div class="col-md">
                            @Html.DropDownListFor(m => m.Role, new SelectList(ViewBag.Roles, "Value", "Text"), new { @class = "form-control" })
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-gradient-secondary btn-fw" data-dismiss="modal">No</button>
                    <button type="submit" class="btn btn-gradient-success btn-fw">Yes</button>
                </div>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}