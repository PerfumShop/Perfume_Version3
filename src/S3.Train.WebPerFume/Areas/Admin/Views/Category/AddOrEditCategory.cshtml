@using S3.Train.WebPerFume.Areas.Admin.Models
@model CategoryViewModel

@{
    ViewBag.Title = "AddOrEditCategory";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="card">
    <div class="card-body">
        <h4 class="card-title">Category</h4>
        @{
            if (Model.Name == null)
            {
                <h4 class="card-description">Create New Category</h4>
            }
            else
            {
                <h4 class="card-description">Update Category</h4>
                Model.Summary = Html.Raw(HttpUtility.HtmlDecode(Model.Summary)).ToString();
            }
        }

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-auto" for="Name">Product</label>
                        <div class="col-md-10">
                            @Html.ListBoxFor(model => model.SelectedProducts, Model.DropDownProduct, new { @class = "form-control", @multiple = "multiple", @size = "8" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ParentId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.ParentId, Model.DropDownCategory, "select", new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Summary, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Summary, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Summary, "", new { @class = "text-danger" })
                            <script type="text/javascript">CKEDITOR.replace("Summary", { htmlEncodeOutput: true });</script>
                        </div>
                    </div>


                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Submit" class="btn btn-gradient-primary btn-fw mr-2" />
                        </div>
                    </div>
                </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index", new { @class = "btn btn-gradient-secondary btn-fw" })
        </div>
    </div>
</div>
